@0


@1
MOV UP, ACC
#STORE INPUT ACC
MOV ACC, DOWN
#MOVE ACC DOWN
MOV ACC, RIGHT
#MOVE ACC RIGHT

@2
S: MOV LEFT, ACC
#STORE LEFT IN ACC
SAV
#ACC -> BAK
T: MOV LEFT,  ACC
#STORE LEFT IN ACC
JEZ Z
#=0 JUMP TO Z
MOV ACC, RIGHT
#MOVE ACC RIGHT
SWP
#BAK -> ACC ACC-> BAK
SUB RIGHT
#ACC - RIGHT
JLZ L
# <0 JUMP TO L 
ADD RIGHT
#ADD THE RIGHT TO ACC
SAV
#ACC -> VAK
JMP T
#JUMP TO T TO CONTINUE TO TEST
L: MOV RIGHT,ACC
#MOVE RIGHT TO ACC (NEW NEW MAX)
 JMP T
#JUMP TO T TO CONTINUE TO TEST
Z:SWP
#BAK -> ACC ACC-> BAK
MOV ACC, DOWN
#MOVE ACC DOWN

@3
MOV LEFT, ACC
#STORE LEFT ACC
MOV ACC, LEFT
#MOVE ACC LEFT
MOV ACC, LEFT
#MOVE ACC LEFT

@4
MOV RIGHT, ACC
#STORE RIGHT ACC
MOV ACC, RIGHT
#MOVE ACC RIGHT
MOV ACC, RIGHT
#MOVE ACC RIGHT

@5
S: MOV UP, ACC
#STORE UP IN ACC
SAV
#ACC -> BAK
T: MOV UP, ACC
#MOVE UP TO ACC
JEZ Z
# =0 JUMP TO Z
MOV ACC, LEFT
MOVE ACC LEFT
SWP
#BAK -> ACC ACC-> BAK
SUB LEFT
#ACC - LEFT
JGZ P
#IF >0 JUMP TO P
ADD LEFT
#ACC + LEFT
SAV
#ACC -> BAK
JMP T
#JUMP TO T TO CONTINUE TO TEST
P: MOV LEFT,ACC
#MOVE LEFT TO ACC (NEW MIN)
 JMP T
#JUMP TO T TO CONTINUE TO TEST
Z:SWP
# BAK -> ACC ACC -> BAK
MOV ACC, DOWN
#MOVE ACC DOWN

@6
MOV UP, DOWN
#MOVE UP, DOWN

@7


@8
MOV UP, DOWN
#MOVE UP DOWN
#OUPUT.I (MIN)

@9
MOV UP, DOWN
#MOVE UP, DOWN
#OUTPUT.A (MAX)

@10
