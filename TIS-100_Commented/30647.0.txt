@0 
MOV RIGHT, ACC # stores in.b
MOV ACC, RIGHT
MOV ACC, RIGHT

@1
START: # move in.a and in.b for storage and subtracts in.b from in.a, if positive outputs in correct order if negative just clears storage
MOV UP, ACC
SAV
MOV RIGHT, LEFT
MOV ACC, RIGHT
SUB LEFT
JGZ POS
MOV LEFT, NIL
JMP START
POS:
MOV LEFT, DOWN
SWP
MOV ACC, DOWN

@2 
START: # move in.a and in.b for storage and subtracts in.a from in.b, if positive outputs in correct order if negative just clears storage
MOV UP, ACC
SAV
MOV ACC, LEFT
MOV LEFT, RIGHT
SUB RIGHT
JLZ NEG
MOV RIGHT, DOWN
SWP
MOV ACC, DOWN
JMP START
NEG:
MOV RIGHT, NIL

@3 
MOV LEFT, ACC # stores in.a
MOV ACC, LEFT
MOV ACC, LEFT

@4


@5
MOV UP, RIGHT

@6
MOV ANY, DOWN

@7


@8


@9
MOV UP, DOWN
MOV UP, DOWN
MOV 0, DOWN

@10
