@0
# This will be used in finding the sum of the sequence.
MOV RIGHT, RIGHT

@1
# This takes the input and moves it to the ACC.
S:MOV UP, ACC
# This moves the input to node 0 to be used later and to node 2 to be used in calculating the sequence length. 
MOV ACC, RIGHT
MOV ACC, LEFT
# Then we add the last input to the BAK temporary storage thus evealuating the sum of the sequence.
SWP
ADD LEFT
SWP
# If the last was a zero then we know the sequence has ended and can move the sum of the sequence down to the output.
# If not a zeo then start again with the next input. 
JEZ E
JMP S
E:SWP
MOV ACC, DOWN

@2
# This code takes the input from node 1.
S:MOV LEFT, ACC
# If the input is zero then jump to E, if it's higher then jump to G.  
JEZ E
JGZ G
# If the input is higher than zero then it adds one to the BAK value thus increase the length by one.
G:SWP
ADD 1
SWP
JMP S
# When the input is zero it signifies the end of the sequence and can move the BAK value to OUT.L and reset it and ACC to zero.
E:SWP
MOV ACC, DOWN
MOV NIL, ACC

@3


@4
MOV UP, DOWN

@5
MOV UP, DOWN

@6


@7


@8
MOV UP, DOWN

@9
MOV UP, DOWN

@10
